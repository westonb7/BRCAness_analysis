somaticData <- as.data.frame(read_tsv("~/desktop/Data/brcaOutput_nofilter_nodups.txt"))
library(readr)
library(dplyr)
library(ggplot2)
library(ComplexHeatmap)
library(circlize)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(ggplot2)
library(ComplexHeatmap)
library(circlize)
somaticData <- as.data.frame(read_tsv("~/desktop/Data/brcaOutput_nofilter_nodups.txt"))
uniqueSomaticGenes <- sort(unique(somaticData$Gene))
uniqueSomaticSamples <- NULL
uniqueSomaticSamples <- sort(unique(somaticData$Sample)) ##Added
geneCounter <- 0
sMat <- NULL
for (gene in uniqueSomaticGenes)
{
geneValues <- NULL
for (sample in uniqueSomaticSamples)
{
geneCounter <- 0
geneSampleDataFrame <- filter(somaticData, Gene==gene&Sample==sample)
geneSampleValue <- ""
if (nrow(geneSampleDataFrame) > 1)
{
for (row in geneSampleDataFrame)
{
geneCounter <- (geneCounter + 1)
}
geneSampleValue <- paste("Multiple;", sep="")
} else if(nrow(geneSampleDataFrame) > 0) {
geneSampleValue <- paste(geneSampleDataFrame$Variant_Class, ";", sep="")
}
geneValues <- c(geneValues, geneSampleValue)
}
sMat <- rbind(sMat, geneValues)
}
rownames(sMat) <- uniqueSomaticGenes
colnames(sMat) <- uniqueSomaticSamples
alter_fun = list(
background = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#FFFFFF", col = NA))
},
Multiple = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#741C4A", col = NA))
},
insertion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#D81738", col = NA))
},
SNV = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#E48E1E", col = NA))
},
deletion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#4AE48B", col = NA))
}
)
col = c("Multiple" = "#741C4A", "insertion" = "#D81738", "SNV" = "#E48E1E","deletion" = "#4AE48B")
mutationOptions <- c("Multiple", "insertion", "SNV", "deletion")
oncoPrint(sMat, get_type = function(x) strsplit(x, ";")[[1]],
alter_fun = alter_fun, col = col,
column_title = "Somatic Mutations",
heatmap_legend_param = list(title = "Value", at = mutationOptions,
labels = mutationOptions))
germlineData <- as.data.frame(read_tsv("~/desktop/Data/germline_snv_indel.tsv"))
uniqueGermlineGenes <- sort(unique(germlineData$Gene))
uniqueSomaticGenes <- sort(unique(somaticData$Gene))
uniqueSamples <- sort(unique(germlineData$Sample_ID))
uniqueSomaticSamples <- sort(unique(somaticData$Sample)) ##Added
uniqueTotalSamples <- c(uniqueSamples, uniqueSomaticSamples) ##A
uniqueTotalSamples <- sort(unique(uniqueTotalSamples$Sample_ID)) ##A
gMat <- NULL
for (gene in uniqueGermlineGenes)
{
geneValues <- NULL
for (sample in uniqueSamples)
{
geneSampleDataFrame <- filter(germlineData, Gene==gene&Sample_ID==sample)
geneSampleValue <- ""
if (nrow(geneSampleDataFrame) > 0)
geneSampleValue <- paste(geneSampleDataFrame$Mutation_Type, ";", sep="")
geneValues <- c(geneValues, geneSampleValue)
}
gMat <- rbind(gMat, geneValues)
}
rownames(gMat) <- uniqueGermlineGenes
colnames(gMat) <- uniqueSamples
uniqueGermlineGenes <- sort(unique(germlineData$Gene))
uniqueSomaticGenes <- sort(unique(somaticData$Gene))
uniqueSamples <- sort(unique(germlineData$Sample_ID))
uniqueSomaticSamples <- sort(unique(somaticData$Sample)) ##Added
uniqueTotalSamples <- c(uniqueSamples, uniqueSomaticSamples) ##A
uniqueTotalSamples <- sort(unique(uniqueTotalSamples$Sample_ID)) ##A
gMat <- NULL
for (gene in uniqueGermlineGenes)
{
geneValues <- NULL
for (sample in uniqueSamples)
{
geneSampleDataFrame <- filter(germlineData, Gene==gene&Sample_ID==sample)
geneSampleValue <- ""
if (nrow(geneSampleDataFrame) > 0)
geneSampleValue <- paste(geneSampleDataFrame$Mutation_Type, ";", sep="")
geneValues <- c(geneValues, geneSampleValue)
}
gMat <- rbind(gMat, geneValues)
}
rownames(gMat) <- uniqueGermlineGenes
colnames(gMat) <- uniqueSamples
uniqueGermlineGenes <- sort(unique(germlineData$Gene))
uniqueSomaticGenes <- sort(unique(somaticData$Gene))
uniqueSamples <- sort(unique(germlineData$Sample_ID))
uniqueSomaticSamples <- sort(unique(somaticData$Sample)) ##Added
uniqueTotalSamples <- c(uniqueSamples, uniqueSomaticSamples) ##A
uniqueTotalSamples <- sort(unique(uniqueTotalSamples$Sample_ID)) ##A
gMat <- NULL
for (gene in uniqueGermlineGenes)
{
geneValues <- NULL
for (sample in uniqueSamples)
{
geneSampleDataFrame <- filter(germlineData, Gene==gene&Sample_ID==sample)
geneSampleValue <- ""
if (nrow(geneSampleDataFrame) > 0)
geneSampleValue <- paste(geneSampleDataFrame$Mutation_Type, ";", sep="")
geneValues <- c(geneValues, geneSampleValue)
}
gMat <- rbind(gMat, geneValues)
}
rownames(gMat) <- uniqueGermlineGenes
colnames(gMat) <- uniqueSamples
alter_fun = list(
background = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#FFFFFF", col = NA))
},
Insertion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#206490", col = NA))
},
SNV = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#35ABBC", col = NA))
},
Deletion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#4AE48B", col = NA))
}
)
col = c("Insertion" = "#206490", "SNV" = "#35ABBC","Deletion" = "#4AE48B")
mutationOptions <- c("Insertion", "SNV", "Deletion")
oncoPrint(gMat, get_type = function(x) strsplit(x, ";")[[1]],
alter_fun = alter_fun, col = col,
column_title = "Germline Mutations",
heatmap_legend_param = list(title = "Value", at = mutationOptions,
labels = mutationOptions))
uniqueSomaticGenes <- sort(unique(somaticData$Gene))
uniqueSomaticSamples <- NULL
uniqueSomaticSamples <- sort(unique(somaticData$Sample)) ##Added
geneCounter <- 0
sMat <- NULL
for (gene in uniqueSomaticGenes)
{
geneValues <- NULL
for (sample in uniqueSomaticSamples)
{
geneCounter <- 0
geneSampleDataFrame <- filter(somaticData, Gene==gene&Sample==sample)
geneSampleValue <- ""
if (nrow(geneSampleDataFrame) > 1)
{
for (row in geneSampleDataFrame)
{
geneCounter <- (geneCounter + 1)
}
geneSampleValue <- paste("Multiple;", sep="")
} else if(nrow(geneSampleDataFrame) > 0) {
geneSampleValue <- paste(geneSampleDataFrame$Variant_Class, ";", sep="")
}
geneValues <- c(geneValues, geneSampleValue)
}
sMat <- rbind(sMat, geneValues)
}
rownames(sMat) <- uniqueSomaticGenes
colnames(sMat) <- uniqueSomaticSamples
alter_fun = list(
background = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#FFFFFF", col = NA))
},
Multiple = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#741C4A", col = NA))
},
insertion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#D81738", col = NA))
},
SNV = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#E48E1E", col = NA))
},
deletion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#4AE48B", col = NA))
}
)
col = c("Multiple" = "#741C4A", "insertion" = "#D81738", "SNV" = "#E48E1E","deletion" = "#4AE48B")
mutationOptions <- c("Multiple", "insertion", "SNV", "deletion")
oncoPrint(sMat, get_type = function(x) strsplit(x, ";")[[1]],
alter_fun = alter_fun, col = col,
column_title = "Somatic Mutations",
heatmap_legend_param = list(title = "Value", at = mutationOptions,
labels = mutationOptions))
library(readr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ComplexHeatmap)
library(circlize)
knitr::opts_chunk$set(echo = TRUE)
##uniqueSomaticGenes <- sort(unique(somaticData$Gene))
uniqueSomaticGenes <- uniqueGermlineGenes
uniqueSomaticSamples <- NULL
uniqueSomaticSamples <- sort(unique(somaticData$Sample)) ##Added
geneCounter <- 0
sMat <- NULL
for (gene in uniqueSomaticGenes)
{
geneValues <- NULL
for (sample in uniqueSomaticSamples)
{
geneCounter <- 0
geneSampleDataFrame <- filter(somaticData, Gene==gene&Sample==sample)
geneSampleValue <- ""
if (nrow(geneSampleDataFrame) > 1)
{
for (row in geneSampleDataFrame)
{
geneCounter <- (geneCounter + 1)
}
geneSampleValue <- paste("Multiple;", sep="")
} else if(nrow(geneSampleDataFrame) > 0) {
geneSampleValue <- paste(geneSampleDataFrame$Variant_Class, ";", sep="")
}
geneValues <- c(geneValues, geneSampleValue)
}
sMat <- rbind(sMat, geneValues)
}
rownames(sMat) <- uniqueSomaticGenes
colnames(sMat) <- uniqueSomaticSamples
alter_fun = list(
background = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#FFFFFF", col = NA))
},
Multiple = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#741C4A", col = NA))
},
insertion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#D81738", col = NA))
},
SNV = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#E48E1E", col = NA))
},
deletion = function(x, y, w, h) {
grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "#4AE48B", col = NA))
}
)
col = c("Multiple" = "#741C4A", "insertion" = "#D81738", "SNV" = "#E48E1E","deletion" = "#4AE48B")
mutationOptions <- c("Multiple", "insertion", "SNV", "deletion")
oncoPrint(sMat, get_type = function(x) strsplit(x, ";")[[1]],
alter_fun = alter_fun, col = col,
column_title = "Somatic Mutations",
heatmap_legend_param = list(title = "Value", at = mutationOptions,
labels = mutationOptions))
